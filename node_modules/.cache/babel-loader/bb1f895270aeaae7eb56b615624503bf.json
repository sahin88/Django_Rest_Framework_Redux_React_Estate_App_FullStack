{"ast":null,"code":"import React,{Fragment}from\"react\";import Card from\"./Card\";var Listingss=function Listingss(_ref){var listing=_ref.listing;var getListing=function getListing(){var result=[];var cardListing=[];listing.map(function(element){cardListing.push(/*#__PURE__*/React.createElement(Card,{id:element.id,title:element.title,adress:element.adress,bathrooms:element.bathrooms,bedrooms:element.bedrooms,house_type:element.house_type,open_house:element.open_house,photo_main:\"https://estate-real-appp.herokuapp.com\".concat(element.photo_main),city:element.city,state:element.state,price:element.price,slug:element.slug,sqft:element.sqft,sale_type:element.sale_type}));});for(var i=0;i<listing.length;i+=3){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,cardListing[i]),cardListing[i+1]?/*#__PURE__*/React.createElement(\"div\",null,cardListing[i+1]):null,cardListing[i+2]?/*#__PURE__*/React.createElement(\"div\",null,cardListing[i+2]):null);}return result;};return/*#__PURE__*/React.createElement(\"div\",{className:\"card__before__show\"},getListing());};export default Listingss;// export class Listingss extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       listing: [],\n//       cards: [],\n//       results: [],\n//     };\n//   }\n//   consistOfCard = () => {\n//     if (this.state.listing.length > 0) {\n//       this.setState({\n//         listing: [],\n//       });\n//     }\n//   };\n//   settingLists = (event) => {\n//     console.log(\"*********************************++data\", this.props.listing);\n//     return this.setState({ listing: this.props.listing });\n//   };\n//   controlFunc = () => {\n//     console.log(\"cardss\", this.state.cards);\n//     for (let i = 0; i < this.props.listing.length; i += 3) {\n//       return (\n//         <div>\n//           <div>{this.state.cards[i]}</div>\n//           {this.state.cards[i + 1] ? (\n//             <div>{this.state.cards[i + 1]}</div>\n//           ) : null}\n//           {this.state.cards[i + 2] ? (\n//             <div>{this.state.cards[i + 2]}</div>\n//           ) : null}\n//         </div>\n//       );\n//     }\n//   };\n//   componentDidMount() {\n//     console.log(\"*******************aynur_abla_gelmesi\", this.props);\n//   }\n//   componentDidUpdate(newProps, prevProps) {\n//     console.log(\n//       \"++++++++++++++++++++++++ynur_abla_gelmesi\",\n//       this.props.listing,\n//       newProps,\n//       prevProps\n//     );\n//     if (this.state.cards.length !== 0) {\n//       this.setState({\n//         cards: [],\n//       });\n//     }\n//   }\n//   render() {\n//     return (\n//       <div>\n//         {/* <input\n//           type=\"hidden\"\n//           value={this.state.listing}\n//           onLoad={this.settingLists()}\n//         />\n//         {/* {this.settingLists()} */}\n//         {/* {this.consistOfCard()} */}\n//         {this.props.listing.map((element) => {\n//           this.state.cards.push(\n//             <Card\n//               id={element.id}\n//               title={element.title}\n//               adress={element.adress}\n//               bathrooms={element.bathrooms}\n//               bedrooms={element.bedrooms}\n//               house_type={element.house_type}\n//               open_house={element.open_house}\n//               photo_main={element.photo_main}\n//               city={element.city}\n//               state={element.state}\n//               price={element.price}\n//               slug={element.slug}\n//               sqft={element.sqft}\n//               sale_type={element.sale_type}\n//             />\n//           );\n//         })}\n//         {this.controlFunc()}\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/home/alex/Documents/clone/estate-real-appp/src/container/Listingss.js"],"names":["React","Fragment","Card","Listingss","listing","getListing","result","cardListing","map","element","push","id","title","adress","bathrooms","bedrooms","house_type","open_house","photo_main","city","state","price","slug","sqft","sale_type","i","length"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAiBC,QAAjB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACjC,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CACAH,OAAO,CAACI,GAAR,CAAY,SAACC,OAAD,CAAa,CACvBF,WAAW,CAACG,IAAZ,cACE,oBAAC,IAAD,EACE,EAAE,CAAED,OAAO,CAACE,EADd,CAEE,KAAK,CAAEF,OAAO,CAACG,KAFjB,CAGE,MAAM,CAAEH,OAAO,CAACI,MAHlB,CAIE,SAAS,CAAEJ,OAAO,CAACK,SAJrB,CAKE,QAAQ,CAAEL,OAAO,CAACM,QALpB,CAME,UAAU,CAAEN,OAAO,CAACO,UANtB,CAOE,UAAU,CAAEP,OAAO,CAACQ,UAPtB,CAQE,UAAU,iDAA2CR,OAAO,CAACS,UAAnD,CARZ,CASE,IAAI,CAAET,OAAO,CAACU,IAThB,CAUE,KAAK,CAAEV,OAAO,CAACW,KAVjB,CAWE,KAAK,CAAEX,OAAO,CAACY,KAXjB,CAYE,IAAI,CAAEZ,OAAO,CAACa,IAZhB,CAaE,IAAI,CAAEb,OAAO,CAACc,IAbhB,CAcE,SAAS,CAAEd,OAAO,CAACe,SAdrB,EADF,EAkBD,CAnBD,EAoBA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGrB,OAAO,CAACsB,MAA5B,CAAoCD,CAAC,EAAI,CAAzC,CAA4C,CAC1C,mBACE,oBAAC,QAAD,mBACE,+BAAMlB,WAAW,CAACkB,CAAD,CAAjB,CADF,CAEGlB,WAAW,CAACkB,CAAC,CAAG,CAAL,CAAX,cAAqB,+BAAMlB,WAAW,CAACkB,CAAC,CAAG,CAAL,CAAjB,CAArB,CAAuD,IAF1D,CAGGlB,WAAW,CAACkB,CAAC,CAAG,CAAL,CAAX,cAAqB,+BAAMlB,WAAW,CAACkB,CAAC,CAAG,CAAL,CAAjB,CAArB,CAAuD,IAH1D,CADF,CAOD,CAED,MAAOnB,CAAAA,MAAP,CACD,CAlCD,CAmCA,mBAAO,2BAAK,SAAS,CAAC,oBAAf,EAAqCD,UAAU,EAA/C,CAAP,CACD,CArCD,CAuCA,cAAeF,CAAAA,SAAf,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {  Fragment } from \"react\";\nimport Card from \"./Card\";\n\nconst Listingss = ({ listing }) => {\n  const getListing = () => {\n    let result = [];\n    let cardListing = [];\n    listing.map((element) => {\n      cardListing.push(\n        <Card\n          id={element.id}\n          title={element.title}\n          adress={element.adress}\n          bathrooms={element.bathrooms}\n          bedrooms={element.bedrooms}\n          house_type={element.house_type}\n          open_house={element.open_house}\n          photo_main={`https://estate-real-appp.herokuapp.com${element.photo_main}`}\n          city={element.city}\n          state={element.state}\n          price={element.price}\n          slug={element.slug}\n          sqft={element.sqft}\n          sale_type={element.sale_type}\n        />\n      );\n    });\n    for (let i = 0; i < listing.length; i += 3) {\n      return (\n        <Fragment>\n          <div>{cardListing[i]}</div>\n          {cardListing[i + 1] ? <div>{cardListing[i + 1]}</div> : null}\n          {cardListing[i + 2] ? <div>{cardListing[i + 2]}</div> : null}\n        </Fragment>\n      );\n    }\n\n    return result;\n  };\n  return <div className=\"card__before__show\">{getListing()}</div>;\n};\n\nexport default Listingss;\n\n// export class Listingss extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       listing: [],\n//       cards: [],\n//       results: [],\n//     };\n//   }\n//   consistOfCard = () => {\n//     if (this.state.listing.length > 0) {\n//       this.setState({\n//         listing: [],\n//       });\n//     }\n//   };\n\n//   settingLists = (event) => {\n//     console.log(\"*********************************++data\", this.props.listing);\n//     return this.setState({ listing: this.props.listing });\n//   };\n\n//   controlFunc = () => {\n//     console.log(\"cardss\", this.state.cards);\n//     for (let i = 0; i < this.props.listing.length; i += 3) {\n//       return (\n//         <div>\n//           <div>{this.state.cards[i]}</div>\n//           {this.state.cards[i + 1] ? (\n//             <div>{this.state.cards[i + 1]}</div>\n//           ) : null}\n//           {this.state.cards[i + 2] ? (\n//             <div>{this.state.cards[i + 2]}</div>\n//           ) : null}\n//         </div>\n//       );\n//     }\n//   };\n//   componentDidMount() {\n//     console.log(\"*******************aynur_abla_gelmesi\", this.props);\n//   }\n//   componentDidUpdate(newProps, prevProps) {\n//     console.log(\n//       \"++++++++++++++++++++++++ynur_abla_gelmesi\",\n//       this.props.listing,\n//       newProps,\n//       prevProps\n//     );\n\n//     if (this.state.cards.length !== 0) {\n//       this.setState({\n//         cards: [],\n//       });\n//     }\n//   }\n//   render() {\n//     return (\n//       <div>\n//         {/* <input\n//           type=\"hidden\"\n//           value={this.state.listing}\n//           onLoad={this.settingLists()}\n//         />\n//         {/* {this.settingLists()} */}\n//         {/* {this.consistOfCard()} */}\n\n//         {this.props.listing.map((element) => {\n//           this.state.cards.push(\n//             <Card\n//               id={element.id}\n//               title={element.title}\n//               adress={element.adress}\n//               bathrooms={element.bathrooms}\n//               bedrooms={element.bedrooms}\n//               house_type={element.house_type}\n//               open_house={element.open_house}\n//               photo_main={element.photo_main}\n//               city={element.city}\n//               state={element.state}\n//               price={element.price}\n//               slug={element.slug}\n//               sqft={element.sqft}\n//               sale_type={element.sale_type}\n//             />\n//           );\n//         })}\n//         {this.controlFunc()}\n//       </div>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}